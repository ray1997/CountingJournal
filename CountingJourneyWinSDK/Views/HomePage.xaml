<Page
    x:Class="CountingJournal.Views.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:m="using:CountingJournal.Model"
    xmlns:vm="using:CountingJournal.ViewModels"
    xmlns:local="using:CountingJournal.Views"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">

    <Grid x:Name="ContentArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--Goto-->
        <Grid Canvas.ZIndex="{x:Bind ViewModel.GoToControlsIndex, Mode=OneWay}"
              Visibility="{x:Bind ViewModel.ShowGoToInput, Mode=OneWay}"
              Grid.RowSpan="3"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
            <Rectangle HorizontalAlignment="Stretch"
                       Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                       Opacity="0.75"
                       VerticalAlignment="Stretch"/>

            <StackPanel Margin="0,140,0,0" 
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top" Orientation="Vertical">
                <StackPanel Orientation="Horizontal">
                    <TextBox Header="Enter message to go to the exact input message"
                         PlaceholderText="Message"
                         MinWidth="240"
                         x:Name="gotoInput"
                         AcceptsReturn="False"
                         KeyDown="SubmitAttempt"
                         Text="{x:Bind ViewModel.GotoInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Margin="5,0"
                        Command="{x:Bind ViewModel.GoToThisMessageCommand}">
                        <SymbolIcon Symbol="Forward"/>
                    </Button>
                </StackPanel>
                <TextBlock Text="No message found!" Visibility="{x:Bind ViewModel.NoMessageFound, Mode=OneWay}"/>
            </StackPanel>
        </Grid>
        
        <MenuBar Background="{ThemeResource AcrylicBackgroundFillColorDefaultBrush}">
            <MenuBarItem Title="File">
                <MenuFlyoutItem Command="{x:Bind ViewModel.ListingMessagesCommand}"
                                Text="Load messages">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE149;"/>
                    </MenuFlyoutItem.Icon>
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F5"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Icon="Save"
                                Text="Save to Json"
                                Command="{x:Bind ViewModel.ExportJSONCommand}">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="S" Modifiers="Control"/>
                    </MenuFlyoutItem.KeyboardAccelerators>                    
                </MenuFlyoutItem>
            </MenuBarItem>
            <MenuBarItem Title="Message">
                <MenuFlyoutItem Text="Count"
                                Command="{x:Bind ViewModel.CountingCommand}">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE0AB;"/>
                    </MenuFlyoutItem.Icon>
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F6"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.ShowCountingInfoBar, Mode=TwoWay}"
                                      Text="Show counting info bar">
                    <ToggleMenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE946;"/>
                    </ToggleMenuFlyoutItem.Icon>
                </ToggleMenuFlyoutItem>
            </MenuBarItem>
            <MenuBarItem Title="Filter">
                <ToggleMenuFlyoutItem Text="Show filler" 
                                      IsChecked="{x:Bind ViewModel.ShowFillers, Mode=TwoWay}">
                    <ToggleMenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Delete"/>
                    </ToggleMenuFlyoutItem.Icon>
                </ToggleMenuFlyoutItem>
                <ToggleMenuFlyoutItem Text="Hide confirmed filler" 
                                      IsEnabled="{x:Bind ViewModel.CanSelectConfirmFiller, Mode=OneWay}"
                                      IsChecked="{x:Bind ViewModel.HideOnlyConfirmedFiller, Mode=TwoWay}">
                    <ToggleMenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="View"/>
                    </ToggleMenuFlyoutItem.Icon>                    
                </ToggleMenuFlyoutItem>
                <ToggleMenuFlyoutItem Text="Show number"
                                      IsChecked="{x:Bind ViewModel.ShowConfirmed, Mode=TwoWay}">
                    <ToggleMenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xF87B;"/>
                    </ToggleMenuFlyoutItem.Icon>
                </ToggleMenuFlyoutItem>
            </MenuBarItem>
            <MenuBarItem Title="Navigate">
                <MenuFlyoutSubItem Text="Jump mode" Icon="ImportAll">
                    <RadioMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsJumpThroughFiller, Mode=OneWay}"
                                         Click="SetJumpMode" Tag="filler" Text="Filler">
                        <RadioMenuFlyoutItem.Icon>
                            <SymbolIcon Symbol="Delete"/>
                        </RadioMenuFlyoutItem.Icon>
                    </RadioMenuFlyoutItem>
                    <RadioMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsJumpThroughNumber, Mode=OneWay}"
                                         Click="SetJumpMode"  Text="Number" Tag="number">
                        <RadioMenuFlyoutItem.Icon>
                            <FontIcon Glyph="&#xF87B;"/>
                        </RadioMenuFlyoutItem.Icon>
                    </RadioMenuFlyoutItem>
                    <RadioMenuFlyoutItem IsChecked="{x:Bind ViewModel.IsJumpThroughConfirmedFiller, Mode=OneWay}"
                                         Click="SetJumpMode"  Text="Confirmed filler" Tag="confirm">
                        <RadioMenuFlyoutItem.Icon>
                            <FontIcon Glyph="&#xF87B;"/>
                        </RadioMenuFlyoutItem.Icon>
                    </RadioMenuFlyoutItem>
                </MenuFlyoutSubItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Command="{x:Bind ViewModel.FirstOfJumpCommand}"
                                Text="Go to first item">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xEB9E;"/>
                    </MenuFlyoutItem.Icon>
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Insert" Modifiers="Control"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutItem Command="{x:Bind ViewModel.LastOfJumpCommand}"
                                Text="Go to last item">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xEB9D;"/>
                    </MenuFlyoutItem.Icon>
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Delete" Modifiers="Control"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Icon="Previous"
                                Command="{x:Bind ViewModel.JumpPreviousCommand}"
                                Text="Previous item">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Insert"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutItem Icon="Next"
                                Command="{x:Bind ViewModel.JumpNextCommand}"
                                Text="Next item">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Delete"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Go to" Icon="Go"
                                Command="{x:Bind ViewModel.ShowGoToPromptCommand}">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="G"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
            </MenuBarItem>
        </MenuBar>
        
        <Grid Grid.Row="1">
            <Grid.Resources>
                <DataTemplate x:DataType="vm:MessageViewModel"
                              x:Key="withPicView">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.ColumnSpan="3" Opacity="0.25" Visibility="{x:Bind ConfirmedFiller, Mode=OneWay}"
                                   Fill="{ThemeResource AccentAcrylicBackgroundFillColorDefaultBrush}"/>
                        <FontIcon Glyph="{x:Bind FillerIcon, Mode=OneWay}" VerticalAlignment="Center"
                                  ToolTipService.ToolTip="{x:Bind FillerTooltip, Mode=OneWay}" Margin="0,0,5,0"
                                  HorizontalAlignment="Center"
                                  Visibility="{x:Bind ShowIfItIsFiller, Mode=OneWay}"
                                  Foreground="{ThemeResource SystemAccentColor}"/>
                        <StackPanel Orientation="Vertical" Grid.Column="1">
                            <StackPanel Orientation="Horizontal">
                                <PersonPicture DisplayName="{x:Bind Sender.Name}" MaxHeight="32">
                                    <ToolTipService.ToolTip>
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Text="{x:Bind Sender.Name}"
                                                   FontSize="18" FontWeight="Bold"/>
                                            <TextBlock FontSize="12">
                                            #<Run Text="{x:Bind Sender.Discriminator}"/> (<Run Text="{x:Bind Sender.UserID}"/>)
                                            </TextBlock>
                                        </StackPanel>
                                    </ToolTipService.ToolTip>
                                </PersonPicture>
                                <SymbolIcon Symbol="Clock" Margin="5,0" ToolTipService.ToolTip="{x:Bind SendAt}"/>
                                <TextBlock Text="{x:Bind Content}"
                                       VerticalAlignment="Center" 
                                       IsTextSelectionEnabled="True"/>
                                <TextBlock Text="{x:Bind Attachments}" 
                                       VerticalAlignment="Center"
                                       FontSize="12" IsTextSelectionEnabled="True"/>
                            </StackPanel>
                            <Image Source="{x:Bind Attachments}" Width="320" Height="240"
                               Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Grid.Column="2">
                                <TextBlock>
                                As number: <Run Text="{x:Bind AsNumber}"/>
                                </TextBlock>
                                <TextBlock Margin="5,0">
                                Expected: <Run Text="{x:Bind ExpectNumber}"/>
                                </TextBlock>
                                <Button Command="{x:Bind ConfirmThisMessageAsFillerCommand}">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon Glyph="&#xE109;"/>
                                    <TextBlock Text="Confirmed filler"/>
                                </StackPanel>
                            </Button>
                            <Button Command="{x:Bind RevertFillerConfirmationCommand}"
                                    Margin="5,0">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon Glyph="&#xE10E;"/>
                                    <TextBlock Text="Revert filler confirm"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
                <DataTemplate x:DataType="vm:MessageViewModel"
                              x:Key="plainTextView">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.ColumnSpan="3" Opacity="0.25" Visibility="{x:Bind ConfirmedFiller, Mode=OneWay}"
                                   Fill="{ThemeResource AccentAcrylicBackgroundFillColorDefaultBrush}"/>
                        <FontIcon Glyph="{x:Bind FillerIcon, Mode=OneWay}" VerticalAlignment="Center"
                                  ToolTipService.ToolTip="{x:Bind FillerTooltip, Mode=OneWay}" Margin="0,0,5,0"
                                  HorizontalAlignment="Center"
                                  Visibility="{x:Bind ShowIfItIsFiller, Mode=OneWay}"
                                  Foreground="{ThemeResource SystemAccentColor}"/>
                        <StackPanel Orientation="Horizontal"
                                    Grid.Column="1">
                            <PersonPicture DisplayName="{x:Bind Sender.Name}" MaxHeight="32">
                                <ToolTipService.ToolTip>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="{x:Bind Sender.Name}"
                                                   FontSize="18" FontWeight="Bold"/>
                                        <TextBlock FontSize="12">
                                            #<Run Text="{x:Bind Sender.Discriminator}"/> (<Run Text="{x:Bind Sender.UserID}"/>)
                                        </TextBlock>
                                    </StackPanel>
                                </ToolTipService.ToolTip>
                            </PersonPicture>
                            <SymbolIcon Symbol="Clock" Margin="5,0" ToolTipService.ToolTip="{x:Bind SendAt}"/>
                            <TextBlock Text="{x:Bind Content}" IsTextSelectionEnabled="True"
                                   VerticalAlignment="Center"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Grid.Column="2">
                            <TextBlock>
                                As number: <Run Text="{x:Bind AsNumber}"/>
                            </TextBlock>
                            <TextBlock Margin="5,0">
                                Expected: <Run Text="{x:Bind ExpectNumber}"/>
                            </TextBlock>
                            <Button Command="{x:Bind ConfirmThisMessageAsFillerCommand}">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon Glyph="&#xE109;"/>
                                    <TextBlock Text="Confirmed filler"/>
                                </StackPanel>
                            </Button>
                            <Button Command="{x:Bind RevertFillerConfirmationCommand}"
                                    Margin="5,0">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon Glyph="&#xE10E;"/>
                                    <TextBlock Text="Revert filler confirm"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
                <local:MessageTemplate x:Key="messageView"
                                       PlainText="{StaticResource plainTextView}"
                                       WithPics="{StaticResource withPicView}"/>
            </Grid.Resources>
            <ListView ItemsSource="{x:Bind ViewModel.CountingMessages, Mode=TwoWay}"
                      ItemTemplateSelector="{StaticResource messageView}"
                      HorizontalAlignment="Stretch"
                      x:Name="mainListView"
                      VerticalAlignment="Stretch"
                      SelectedIndex="{x:Bind ViewModel.SelectedMessage, Mode=TwoWay, FallbackValue=-1}">
            </ListView>
        </Grid>

        <Grid Background="{ThemeResource SystemColorControlAccentColor}"
              Grid.Row="2" Padding="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <ProgressRing Width="24" Height="24"
                              ToolTipService.ToolTip="Counting..."
                              Visibility="{x:Bind ViewModel.IsCountingRightNow, Mode=OneWay}"/>
                <TextBlock FontSize="14" TextAlignment="Left" TextTrimming="CharacterEllipsis"
                           TextWrapping="Wrap" Margin="5,0"
                           VerticalAlignment="Center"
                           MaxWidth="240"
                           MaxHeight="24">
                        <Run Text="{x:Bind ViewModel.LatestMessageCount, Mode=OneWay}"/>
                </TextBlock>
            </StackPanel>
            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <FontIcon Glyph="&#xE902;"
                          ToolTipService.ToolTip="Total participant"/>
                <TextBlock Text="{x:Bind ViewModel.TotalParticipant, Mode=OneWay}" VerticalAlignment="Center"
                           Margin="5,0"/>
                <TextBlock Text="|" Margin="5,0,10,0"/>
                <FontIcon Glyph="&#xE206;"
                          ToolTipService.ToolTip="Total messages"/>
                <TextBlock Text="{x:Bind ViewModel.Messages.Count, Mode=OneWay}" VerticalAlignment="Center"
                           Margin="5,0"/>
                <TextBlock Text="|" Margin="5,0"/>
                <FontIcon Glyph="&#xE107;"
                          ToolTipService.ToolTip="Total filler messages"/>
                <TextBlock Text="{x:Bind ViewModel.TotalFiller, Mode=OneWay}" VerticalAlignment="Center"
                           Margin="5,0"/>
            </StackPanel>
        </Grid>
    </Grid>
</Page>
